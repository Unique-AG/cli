name: "Release"

on:
  push:
    branches:
      - main
    paths:
      - src/**
      - examples/**
      - bin/**

env:
  RELEASE_REPO_OWNER: Unique-AG
  RELEASE_REPO: cli
  
jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Check if version already exists
        id: version-check
        run: |
          package_version=$(node -p "require('./package.json').version")
          exists=$(gh api repos/${{ github.repository }}/releases/tags/v$package_version >/dev/null 2>&1 && echo "true" || echo "")

          if [ -n "$exists" ];
          then
            echo "Version v$package_version already exists"
            echo "::warning file=package.json,line=1::Version v$package_version already exists - no release will be created. If you want to create a new release, please update the version in package.json and push again."
            echo "skipped=true" >> $GITHUB_OUTPUT
          else
            echo "Version v$package_version does not exist. Creating release..."
            echo "skipped=false" >> $GITHUB_OUTPUT
            echo "tag=v$package_version" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        if: ${{ steps.version-check.outputs.skipped == 'false' }}
        with:
          name: ${{ steps.version-check.outputs.tag }}
          tag: ${{ steps.version-check.outputs.tag }}
          commit: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          skipIfReleaseExists: true

  # We can not use it as release trigger due to https://github.com/orgs/community/discussions/25281, so we call it directly after release
  publish:
    needs:
      - release
    uses: ./.github/workflows/on-release.yml
    secrets: inherit
